# .github/workflows/generate-gallery.yml
name: Generate Image Gallery JSON and HTML

on:
  push:
    paths:
      - 'pics/**'

jobs:
  generate-gallery:
    runs-on: ubuntu-latest

    env:
      FOLDER_NAME: 'Onam-25'  # Set your folder name here to match your pictures folder in pics/

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Gather image files list
      id: list_files
      run: |
        echo "Listing files in pics/$FOLDER_NAME"
        files=$(ls pics/$FOLDER_NAME | grep -E '\.(jpg|jpeg|png|gif)$' | sort | jq -R -s -c 'split("\n")[:-1]')
        echo "files=$files" >> $GITHUB_OUTPUT

    - name: Create JSON file with image names
      run: |
        echo '${{ steps.list_files.outputs.files }}' > $FOLDER_NAME.json
        # Move to root directory (already root, but just in case)
        mv $FOLDER_NAME.json .

    - name: Generate HTML file
      run: |
        cat > index.html <<EOF
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Image Gallery</title>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;600&display=swap');

    body {
      margin: 0;
      height: 100vh;
      font-family: 'Poppins', sans-serif;
      color: #eee;
      overflow-x: hidden;
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 1rem;
      background:
        radial-gradient(circle at 30% 30%, #444444 0%, transparent 0%),
        radial-gradient(circle at 70% 70%, #222222 0%, transparent 50%),
        linear-gradient(135deg, #1c1c1c, #555555);
      background-repeat: no-repeat;
      background-size: cover;
    }

    h1 {
      margin-bottom: 1rem;
      font-weight: 600;
      letter-spacing: 1.5px;
    }

    .gallery {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
      gap: 15px;
      width: 100%;
      max-width: 1000px;
    }

    .gallery img {
      width: 100%;
      height: 220px;
      object-fit: cover;
      border-radius: 10px;
      cursor: pointer;
      box-shadow: 0 4px 8px rgba(0,0,0,0.5);
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      display: block;
    }

    .gallery img:hover {
      transform: scale(1.05);
      box-shadow: 0 8px 16px rgba(255,255,255,0.4);
    }

    .popup-overlay {
      position: fixed;
      top: 0; left: 0; right: 0; bottom: 0;
      background: rgba(0, 0, 0, 0.7);
      backdrop-filter: blur(6px);
      display: none;
      justify-content: center;
      align-items: center;
      z-index: 1000;
      padding: 20px;
    }

    .popup-overlay.active {
      display: flex;
    }

    .popup-content {
      position: relative;
      max-width: 90vw;
      max-height: 90vh;
      border-radius: 12px;
      overflow: hidden;
      box-shadow: 0 0 20px #000;
      background: linear-gradient(135deg, #333, #111);
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .popup-content img {
      max-width: 90vw;
      max-height: 80vh;
      width: auto;
      height: auto;
      border-radius: 12px;
      display: block;
      user-select: none;
      box-shadow: 0 8px 24px rgba(0,0,0,0.7);
      background: #222;
    }

    .download-btn {
      position: absolute;
      top: 12px;
      right: 12px;
      background: rgba(0, 0, 0, 0.6);
      border: none;
      border-radius: 50%;
      padding: 10px 12px;
      cursor: pointer;
      transition: background 0.3s ease;
      display: flex;
      align-items: center;
      justify-content: center;
      color: #eee;
      font-size: 20px;
      box-shadow: 0 2px 5px rgba(0,0,0,0.7);
      text-decoration: none;
    }

    .download-btn:hover {
      background: rgba(50, 50, 50, 0.9);
    }

    .close-btn {
      position: absolute;
      top: 12px;
      left: 12px;
      background: rgba(0, 0, 0, 0.6);
      border: none;
      border-radius: 50%;
      padding: 10px 14px;
      color: #eee;
      font-size: 22px;
      cursor: pointer;
      transition: background 0.3s ease;
      box-shadow: 0 2px 5px rgba(0,0,0,0.7);
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .close-btn:hover {
      background: rgba(50, 50, 50, 0.9);
    }
  </style>
</head>
<body>
  <h1>Image Gallery</h1>
  <div class="gallery" id="gallery"></div>

  <div class="popup-overlay" id="popup">
    <div class="popup-content">
      <button class="close-btn" id="closeBtn" aria-label="Close popup">&times;</button>
      <img id="popupImg" src="#" alt="Full sized image" />
      <a id="downloadBtn" class="download-btn" download="" title="Download Image" aria-label="Download image">
        &#8681;
      </a>
    </div>
  </div>

  <script>
    const gallery = document.getElementById('gallery');
    const popup = document.getElementById('popup');
    const popupImg = document.getElementById('popupImg');
    const downloadBtn = document.getElementById('downloadBtn');
    const closeBtn = document.getElementById('closeBtn');

    const folderName = "${FOLDER_NAME}";

    fetch(folderName + ".json")
      .then(res => res.json())
      .then(images => {
        gallery.innerHTML = images.map(img =>
          `<img src="pics/${folderName}/${img}" alt="" data-src="pics/${folderName}/${img}">`).join('');
      });

    function openPopup(src) {
      popup.classList.add('active');
      popupImg.src = src;
      downloadBtn.href = src;
      downloadBtn.setAttribute('download', src.split('/').pop());
      document.body.style.overflow = 'hidden';
    }

    function closePopup() {
      popup.classList.remove('active');
      popupImg.src = '#';
      document.body.style.overflow = '';
    }

    closeBtn.addEventListener('click', closePopup);
    popup.addEventListener('click', e => {
      if (e.target === popup) closePopup();
    });

    window.addEventListener('keydown', e => {
      if (e.key === 'Escape' && popup.classList.contains('active')) {
        closePopup();
      }
    });

    gallery.addEventListener('click', e => {
      if (e.target.tagName === 'IMG') {
        openPopup(e.target.getAttribute('data-src'));
      }
    });
  </script>
</body>
</html>
EOF

    - name: Commit and push generated files
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add index.html $FOLDER_NAME.json
        git commit -m "Auto-generated gallery HTML and JSON for $FOLDER_NAME"
        git push
      # Prevent failure on no changes
      continue-on-error: true
