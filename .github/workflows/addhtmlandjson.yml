name: Update event.html for event galleries

on:
  push:
    paths:
      - 'pics/**'

permissions:
  contents: write

jobs:
  update-index:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Generate event.html with buttons for all events
        run: |
          for event_dir in pics/*; do
            if [ -d "$event_dir" ]; then
              event=$(basename "$event_dir")
              jsonfile="${event}.json"
              indexfile="${event}.html"
              imglist=()
              for imgfile in "$event_dir"/*.{jpg,jpeg,png,webp,gif,bmp}; do
                [ -e "$imgfile" ] || continue
                imglist+=("\"$(basename "$imgfile")\"")
              done
              echo "[${imglist[*]}]," > "$jsonfile"
              cat <<EOF > "$indexfile"
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <title>Image Gallery</title>
            <style>
              @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;600&display=swap');

              body {
                margin: 0;
                background: linear-gradient(135deg, #1e1e1e, #555555);
                font-family: 'Poppins', sans-serif;
                color: #eee;
                overflow-x: hidden;
                min-height: 100vh;
                display: flex;
                flex-direction: column;
                align-items: center;
                padding: 1rem;
              }

              h1 {
                margin-bottom: 1rem;
                font-weight: 600;
                letter-spacing: 1.5px;
              }

              .gallery {
                display: grid;
                grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
                gap: 15px;
                width: 100%;
                max-width: 1000px;
              }

              .gallery img {
                  width: 100%;
                  height: 220px;          /* Increased height for longer/thinner look */
                  object-fit: cover;
                  border-radius: 10px;
                  cursor: pointer;
                  box-shadow: 0 4px 8px rgba(0,0,0,0.5);
                  transition: transform 0.3s ease, box-shadow 0.3s ease;
                  display: block;
                }


              .gallery img:hover {
                transform: scale(1.05);
                box-shadow: 0 8px 16px rgba(255,255,255,0.4);
              }

              .popup-overlay {
                position: fixed;
                top: 0; left: 0; right: 0; bottom: 0;
                background: rgba(0, 0, 0, 0.7);
                backdrop-filter: blur(6px);
                display: none;
                justify-content: center;
                align-items: center;
                z-index: 1000;
                padding: 20px;
              }

              .popup-overlay.active {
                display: flex;
              }

              .popup-content {
                position: relative;
                max-width: 90vw;
                max-height: 90vh;
                border-radius: 12px;
                overflow: hidden;
                box-shadow: 0 0 20px #000;
                background: linear-gradient(135deg, #333, #111);
                display: flex;
                justify-content: center;
                align-items: center;
              }

              .popup-content img {
                max-width: 90vw;       /* Image will never exceed 90% of viewport width */
                max-height: 80vh;      /* Image will never exceed 80% of viewport height */
                width: auto;           /* Preserve natural width */
                height: auto;          /* Preserve natural height */
                border-radius: 12px;
                display: block;
                user-select: none;
                box-shadow: 0 8px 24px rgba(0,0,0,0.7);
                background: #222;
              }


              .download-btn {
                position: absolute;
                top: 12px;
                right: 12px;
                background: rgba(0, 0, 0, 0.6);
                border: none;
                border-radius: 50%;
                padding: 10px 12px;
                cursor: pointer;
                transition: background 0.3s ease;
                display: flex;
                align-items: center;
                justify-content: center;
                color: #eee;
                font-size: 20px;
                box-shadow: 0 2px 5px rgba(0,0,0,0.7);
                text-decoration: none;
              }

              .download-btn:hover {
                background: rgba(50, 50, 50, 0.9);
              }

              .close-btn {
                position: absolute;
                top: 12px;
                left: 12px;
                background: rgba(0, 0, 0, 0.6);
                border: none;
                border-radius: 50%;
                padding: 10px 14px;
                color: #eee;
                font-size: 22px;
                cursor: pointer;
                transition: background 0.3s ease;
                box-shadow: 0 2px 5px rgba(0,0,0,0.7);
                display: flex;
                align-items: center;
                justify-content: center;
              }

              .close-btn:hover {
                background: rgba(50, 50, 50, 0.9);
              }
            </style>
          </head>
          <body>
            <h1>Event Image Gallery</h1>
            <div class="gallery" id="gallery"></div>

            <div class="popup-overlay" id="popup">
              <div class="popup-content">
                <button class="close-btn" id="closeBtn" aria-label="Close popup">&times;</button>
                <img id="popupImg" src="#" alt="Full sized image" />
                <a id="downloadBtn" class="download-btn" download="" title="Download Image" aria-label="Download image">
                  &#8681;
                </a>
              </div>
            </div>

            <script>
              const gallery = document.getElementById('gallery');
              const popup = document.getElementById('popup');
              const popupImg = document.getElementById('popupImg');
              const downloadBtn = document.getElementById('downloadBtn');
              const closeBtn = document.getElementById('closeBtn');

              // Fetch event.json and build gallery
              const name = "${event}";
              fetch("${name}.json")
                .then(res => {
                  if (!res.ok) throw new Error(`Cannot load ${name}.json`);
                  return res.json();
                })
                .then(data => {
                  data.forEach(filename => {
                    const src = "pics/${name}/${filename}";
                    const img = document.createElement('img');
                    img.src = src;
                    img.alt = 'Event image';
                    img.loading = 'lazy';
                    img.addEventListener('click', () => openPopup(src));
                    gallery.appendChild(img);
                  });
                })
                .catch(err => {
                  console.error(err);
                  gallery.innerHTML = '<p style="color:#f44336;">Failed to load gallery images.</p>';
                });


              function openPopup(src) {
                popup.classList.add('active');
                popupImg.src = src;
                downloadBtn.href = src;
                downloadBtn.setAttribute('download', src.split('/').pop());
                document.body.style.overflow = 'hidden';
              }

              function closePopup() {
                popup.classList.remove('active');
                popupImg.src = '#';
                document.body.style.overflow = '';
              }

              closeBtn.addEventListener('click', closePopup);
              popup.addEventListener('click', e => {
                if (e.target === popup) closePopup();
              });

              window.addEventListener('keydown', e => {
                if (e.key === 'Escape' && popup.classList.contains('active')) {
                  closePopup();
                }
              });
            </script>
          </body>
          </html>
          EOF
          fi
          done
          

      - name: Commit event HTML files
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add *.html
          git add *.json
          git commit -m "Update images" || exit 0
          git push
